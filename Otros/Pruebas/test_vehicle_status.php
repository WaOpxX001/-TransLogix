<?php
/**
 * Archivo de prueba para verificar la columna de estado de veh√≠culos
 */
header('Content-Type: text/html; charset=utf-8');

require_once 'config.php';

echo "<h2>üöö Prueba de Estados de Veh√≠culos</h2>";

try {
    $db = new Database();
    $conn = $db->getConnection();
    
    // Test 1: Verificar estructura de tabla veh√≠culos
    echo "<h3>1. Estructura de tabla veh√≠culos</h3>";
    
    $stmt = $conn->prepare("DESCRIBE vehiculos");
    $stmt->execute();
    $columns = $stmt->fetchAll();
    
    echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
    echo "<tr><th>Campo</th><th>Tipo</th><th>Null</th><th>Key</th><th>Default</th></tr>";
    
    $hasEstadoColumn = false;
    foreach ($columns as $column) {
        echo "<tr>";
        echo "<td>{$column['Field']}</td>";
        echo "<td>{$column['Type']}</td>";
        echo "<td>{$column['Null']}</td>";
        echo "<td>{$column['Key']}</td>";
        echo "<td>{$column['Default']}</td>";
        echo "</tr>";
        
        if ($column['Field'] === 'estado') {
            $hasEstadoColumn = true;
        }
    }
    echo "</table>";
    
    if ($hasEstadoColumn) {
        echo "‚úÖ La columna 'estado' existe en la tabla<br>";
    } else {
        echo "‚ùå La columna 'estado' NO existe en la tabla<br>";
        echo "<strong>Soluci√≥n:</strong> Ejecutar: <code>ALTER TABLE vehiculos ADD COLUMN estado VARCHAR(50) DEFAULT 'En Operaci√≥n';</code><br>";
    }
    
    // Test 2: Verificar datos de veh√≠culos
    echo "<h3>2. Datos de veh√≠culos</h3>";
    
    $stmt = $conn->prepare("SELECT id, placa, marca, modelo, tipo, estado FROM vehiculos LIMIT 10");
    $stmt->execute();
    $vehiculos = $stmt->fetchAll();
    
    if ($vehiculos) {
        echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
        echo "<tr><th>ID</th><th>Placa</th><th>Marca</th><th>Modelo</th><th>Tipo</th><th>Estado</th></tr>";
        
        foreach ($vehiculos as $vehiculo) {
            $estado = $vehiculo['estado'] ?? 'Sin estado';
            $estadoClass = '';
            
            switch ($estado) {
                case 'En Operaci√≥n':
                case 'operativo':
                    $estadoClass = 'style="background-color: #d4edda; color: #155724;"';
                    break;
                case 'En Mantenimiento':
                case 'mantenimiento':
                    $estadoClass = 'style="background-color: #fff3cd; color: #856404;"';
                    break;
                case 'Fuera de Servicio':
                case 'fuera_servicio':
                    $estadoClass = 'style="background-color: #f8d7da; color: #721c24;"';
                    break;
            }
            
            echo "<tr>";
            echo "<td>{$vehiculo['id']}</td>";
            echo "<td><strong>{$vehiculo['placa']}</strong></td>";
            echo "<td>{$vehiculo['marca']}</td>";
            echo "<td>{$vehiculo['modelo']}</td>";
            echo "<td>{$vehiculo['tipo']}</td>";
            echo "<td $estadoClass><strong>$estado</strong></td>";
            echo "</tr>";
        }
        echo "</table>";
        
        // Estad√≠sticas de estados
        $stmt = $conn->prepare("SELECT estado, COUNT(*) as count FROM vehiculos GROUP BY estado");
        $stmt->execute();
        $stats = $stmt->fetchAll();
        
        echo "<h4>üìä Distribuci√≥n de estados:</h4>";
        foreach ($stats as $stat) {
            $estado = $stat['estado'] ?? 'Sin estado';
            echo "‚Ä¢ <strong>$estado</strong>: {$stat['count']} veh√≠culos<br>";
        }
        
    } else {
        echo "‚ö†Ô∏è No hay veh√≠culos en la base de datos<br>";
    }
    
    // Test 3: Actualizar estados de ejemplo (si no existen)
    if ($hasEstadoColumn) {
        echo "<h3>3. Actualizar estados de ejemplo</h3>";
        
        // Contar veh√≠culos sin estado
        $stmt = $conn->prepare("SELECT COUNT(*) as count FROM vehiculos WHERE estado IS NULL OR estado = ''");
        $stmt->execute();
        $sinEstado = $stmt->fetch()['count'];
        
        if ($sinEstado > 0) {
            echo "‚ö†Ô∏è Hay $sinEstado veh√≠culos sin estado definido<br>";
            
            // Actualizar con estados por defecto
            $stmt = $conn->prepare("UPDATE vehiculos SET estado = 'En Operaci√≥n' WHERE estado IS NULL OR estado = ''");
            $stmt->execute();
            $updated = $stmt->rowCount();
            
            echo "‚úÖ Actualizados $updated veh√≠culos con estado 'En Operaci√≥n'<br>";
        } else {
            echo "‚úÖ Todos los veh√≠culos tienen estado definido<br>";
        }
    }
    
} catch (Exception $e) {
    echo "‚ùå Error: " . $e->getMessage() . "<br>";
}

echo "<hr>";
echo "<h3>üé® Estados disponibles:</h3>";
echo "<ul>";
echo "<li><span style='background-color: #d4edda; color: #155724; padding: 4px 8px; border-radius: 4px;'>‚úÖ En Operaci√≥n</span> - Veh√≠culo disponible para uso</li>";
echo "<li><span style='background-color: #fff3cd; color: #856404; padding: 4px 8px; border-radius: 4px;'>üîß En Mantenimiento</span> - Veh√≠culo en reparaci√≥n</li>";
echo "<li><span style='background-color: #f8d7da; color: #721c24; padding: 4px 8px; border-radius: 4px;'>‚ùå Fuera de Servicio</span> - Veh√≠culo no disponible</li>";
echo "</ul>";

echo "<h3>üß™ Funciones JavaScript disponibles:</h3>";
echo "<ul>";
echo "<li><code>testVehicleStatus()</code> - Probar estados de veh√≠culos en consola</li>";
echo "<li><code>window.VehiculosManager.getStatusBadge('En Operaci√≥n')</code> - Generar badge de estado</li>";
echo "</ul>";

echo "<h3>üìù Notas:</h3>";
echo "<ul>";
echo "<li>La tabla ahora incluye una columna 'Estado' con badges coloridos</li>";
echo "<li>Los estados se muestran tanto en vista de escritorio como m√≥vil</li>";
echo "<li>Los colores son: Verde (Operaci√≥n), Amarillo (Mantenimiento), Rojo (Fuera de Servicio)</li>";
echo "<li>Si falta la columna 'estado' en la BD, se debe agregar manualmente</li>";
echo "</ul>";
?>
